@page
@model ST10058357_PROG7311_POE2.Pages.Products.IndexModel
@using Microsoft.AspNetCore.Identity
@using ST10058357_PROG7311_POE2.Models

@{
    ViewData["Title"] = "Index";
}
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager


<div class="container">
    
    @if (await Model.IsFarmer())
    {
        <h1>Your Products</h1>
        <p>
            <a class="login-button" style="width:fit-content" asp-page="Create">List New Product</a>
        </p>
    }
    else
    {
        <h1>All Products</h1>
        <p>
            Only farmers can create new products. Please <a asp-page="/Contact">contact support</a> if you need assistance.
        </p>
        <div class="filter-sort mb-4">
            <form method="get" class="form-inline" id="filterForm">
                <div class="form-row align-items-center">
                    <div class="mb-2">
                        <label for="farmerDropdown" class="sr-only">Farmer</label>
                        <div class="custom-dropdown">
                            <select asp-for="FarmerId" class="form-control" id="farmerDropdown">
                                <option value="">All Farmers</option>
                                @foreach (var farmer in Model.Farmers)
                                {
                                    <option value="@farmer.Id">@farmer.FirstName @farmer.LastName</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="mb-2">
                        <label for="categoryDropdown" class="sr-only">Category</label>
                        <div class="custom-dropdown">
                            <select asp-for="CategoryId" class="form-control" id="categoryDropdown">
                                <option value="">All Categories</option>
                                @foreach (var category in Model.ProductCategories)
                                {
                                    <option value="@category.CategoryId">@category.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="mb-2">
                        <label for="subCategoryDropdown" class="sr-only">SubCategory</label>
                        <div class="custom-dropdown">
                            <select asp-for="SubCategoryId" class="form-control" id="subCategoryDropdown">
                                <option value="">All SubCategories</option>
                                @foreach (var subCategory in Model.ProductSubCategories)
                                {
                                    <option value="@subCategory.SubCategoryId">@subCategory.Name</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="mb-2">
                        <label asp-for="StartDate" class="sr-only">Start Date</label>
                        <input asp-for="StartDate" type="date" class="form-control mb-2" />
                    </div>
                    <div class="mb-2">
                        <label asp-for="EndDate" class="sr-only">End Date</label>
                        <input asp-for="EndDate" type="date" class="form-control mb-2" />
                    </div>
                    <div class="mb-2">
                        <button type="submit" class="btn btn-primary mb-2">Filter</button>
                        <button type="button" class="btn btn-secondary mb-2" id="clearButton">Clear</button>
                    </div>
                </div>
            </form>
        </div>
    }

    <div class="product-list">
        @foreach (var product in Model.Product)
        {
            <div class="product-card">
                <img src="~/@product.ImagePath" alt="@product.Name" class="product-image" />
                <div class="product-details">
                    <h2 class="product-name">@product.Name</h2>
                    <p class="product-price">R @product.Price</p>
                    <p class="product-description">@product.Description</p>

                    <a asp-page="./Details" asp-route-id="@product.ProductId" class="product-link">View Details</a>
                </div>
            </div>
        }
    </div>
</div>

@* 
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].FarmerId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].CategoryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].SubCategoryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].ProductionDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product[0].Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Product)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FarmerId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SubCategoryId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductionDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ProductId">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ProductId">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ProductId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table> *@

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var categoryDropdown = document.getElementById('categoryDropdown');
            var subCategoryDropdown = document.getElementById('subCategoryDropdown');

            categoryDropdown.addEventListener('change', function () {
                var selectedCategoryId = this.value;

                subCategoryDropdown.innerHTML = '<option value="">All SubCategories</option>';
                var subCategories = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ProductSubCategories));
                subCategories.forEach(function (subCategory) {
                    if (subCategory.CategoryId == selectedCategoryId) {
                        var option = document.createElement('option');
                        option.value = subCategory.SubCategoryId;
                        option.text = subCategory.Name;
                        subCategoryDropdown.add(option);
                    }
                });
            });

            // Trigger change event to populate subcategories if a category is already selected
            if (categoryDropdown.value) {
                categoryDropdown.dispatchEvent(new Event('change'));
            }

            // Clear button functionality
            document.getElementById('clearButton').addEventListener('click', function () {
                document.getElementById('farmerDropdown').selectedIndex = 0;
                document.getElementById('categoryDropdown').selectedIndex = 0;
                document.getElementById('subCategoryDropdown').selectedIndex = 0;
                document.getElementById('StartDate').value = '';
                document.getElementById('EndDate').value = '';
                document.getElementById('filterForm').submit();
            });

        });
    </script>
}
